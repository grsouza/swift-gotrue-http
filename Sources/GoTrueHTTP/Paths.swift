// Generated by Create API
// https://github.com/kean/CreateAPI
//
// swiftlint:disable all

import Foundation
import Get
import URLQueryEncoder

extension Paths {
  public static var settings: Settings {
    Settings(path: "/settings")
  }

  public struct Settings {
    /// Path: `/settings`
    public let path: String

    public var get: Request<GoTrueHTTP.SettingsResponse> {
      .get(path)
    }
  }
}

extension Paths {
  public static var verify: Verify {
    Verify(path: "/verify")
  }

  public struct Verify {
    /// Path: `/verify`
    public let path: String

    public func post(_ body: GoTrueHTTP.VerificationRequest) -> Request<
      GoTrueHTTP.VerificationResponse
    > {
      .post(path, body: body)
    }
  }
}

extension Paths {
  public static var token: Token {
    Token(path: "/token")
  }

  public struct Token {
    /// Path: `/token`
    public let path: String

    public func post(grantType: GrantType, _ body: GoTrueHTTP.TokenRequest) -> Request<
      GoTrueHTTP.TokenResponse
    > {
      .post(path, query: makePostQuery(grantType), body: body)
    }

    private func makePostQuery(_ grantType: GrantType) -> [(String, String?)] {
      let encoder = URLQueryEncoder()
      encoder.encode(grantType, forKey: "grant_type")
      return encoder.items
    }

    public enum GrantType: String, Codable, CaseIterable {
      case password
      case refreshToken = "refresh_token"
    }
  }
}

public enum Paths {}
